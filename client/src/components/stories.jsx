import { useEffect, useState } from "react";
import axios from "axios";
import { useNavigate } from "react-router-dom";

const Stories = () => {

    const [cashback, setCashBack] = useState([]);
    const [cashBackImages, setCashBackImages] = useState([]);

    useEffect(() => {
        const fetchStores = async () => {
            try {
                const response = await axios.get('http://localhost:4000/api/storeDisplay');
                if (response.data && response.data.data) {
                    const filteredStores = response.data.data.filter(store => store.show_in_cashback === 1);
                    setCashBack(filteredStores);

                    const logoUrls = await Promise.all(filteredStores.map(async store => {
                        try {
                            const storeDetails = await axios.get(`http://localhost:4000/api/getStore/${store.store_id}`);
                            return storeDetails.data.store.logo_url || null;
                        } catch (error) {
                            console.error('Error fetching store logo:', error);
                            return null;
                        }
                    }));
                    setCashBackImages(logoUrls);
                }
            } catch (error) {
                console.error('Error fetching card stores:', error);
            }
        };

        fetchStores();
    }, []);
    
    const navigate = useNavigate();

    return (
        <div className="lg:mx-28 mx-5">
            <div className="flex flex-col justify-center lg:flex-row lg:justify-between mt-10">
                <div className="flex flex-col gap-1 lg:gap-5">
                    <span className="font-semibold text-lg lg:text-3xl">Cash Back at Stores We Love</span>
                </div>
            </div>
            <div className="grid grid-cols-3 lg:grid-cols-8 lg:gap-5 my-5">
                {cashback.map((ele, index) => (
                    <div key={index} className="flex flex-col gap-2 h-[10rem] lg:h-[20rem] cursor-pointer group items-center justify-center">
                        <div style={{ backgroundColor: `${ele.background}` }} className="h-[5rem] w-[5rem] lg:h-[10rem] lg:w-[10rem] p-5 rounded-full flex items-center justify-center border-2 border-black hover:shadow-2xl overflow-hidden">
                            <img src={cashBackImages[index]} alt={`Logo ${index}`} onClick={() => {
                                        navigate(
                                            '/Store', { state: { sId: ele.store_id } }
                                        )
                                    }} className="h-auto w-auto max-h-full max-w-full cursor-pointer"  />
                        </div>
                        <div className="hover:underline text-center group-hover:underline">
                            <span className="flex justify-center gap-2 items-center ">
                                <svg className="-mr-1 mb-1 inline-block h-4 w-4 group-hover:animate-bounce" fill="none" viewBox="0 0 150 150"><path fill="#A8EDF1" fillRule="evenodd" d="M99.61 63.335c1.116 2.746.311 13.517.158 17.327l-1.148 34.325c-.222 4.37 1.16 8.041-9.642 14.191l-10.55 8.741c-4.14 2.775-7.246 6.352-11.935 8.742-3.39-8.983-2.254-17.803-2.281-17.939-.048-.212.086-.314.164-.466-1.342-3.52-.872-15.535-.942-19.712-.206-12.207-.1-8.932-8.025-17.146-4.563-4.725-9.392-9.66-14.158-14.099-18.006-16.756-15.528-12.322-6.904-22.86l35.101-43.231c2.462-3.136 4.335-5.523 6.859-8.697 2.15-2.701 4.388-5.7 6.887-8.127 1.693 5.218.113 11.3-.655 16.602l-3.898 32.688c-.454 3.805-1.833 13.72-1.173 16.897 3.706-.622 7.434-.512 11.245-1.033 4.068-.555 7.306-1.096 11.052-1.317.561 1.87.974 3.334-.144 5.11l-.011.004Z" clipRule="evenodd"></path><path fill="#00CCDB" fillOpacity=".75" d="m85.014 72.657.003 1.902c0 .237-.131.898-.52 2.035-.362 1.054-.867 2.303-1.426 3.599a180.677 180.677 0 0 1-2.23 4.91c-.32.687-.604 1.295-.826 1.787l-.006.012-11.353 25.575a37.463 37.463 0 0 0-.621 1.429c-.456 1.095-.752 1.805-1.544 2.548-1.016.953-3.052 2.012-7.932 2.666l-.17.023-.164.052-10.553 3.351c-1.658.354-3.247.861-4.728 1.334-.37.118-.733.234-1.089.344-1.097.342-2.162.649-3.246.878.307-2.708.987-5.148 1.666-7.056a33.7 33.7 0 0 1 1.179-2.892 30.289 30.289 0 0 1 .436-.899l.565-.485.018-.879c.01-.469.195-1.372.598-2.684.386-1.254.914-2.709 1.49-4.199a210.333 210.333 0 0 1 1.965-4.856c.453-1.096.857-2.073 1.13-2.78l.097-.252c.83-2.158 1.446-3.755 1.82-5.003.4-1.33.593-2.466.43-3.668-.154-1.14-.613-2.179-1.122-3.278l-.277-.595a75.948 75.948 0 0 1-1.783-4.058c-2.005-4.969-4.163-10.217-6.432-15.08a698.471 698.471 0 0 0-2.402-5.08c-.942-1.975-1.687-3.539-2.254-4.825-.486-1.105-.798-1.91-.973-2.52-.18-.622-.169-.886-.157-.961v-.005a.531.531 0 0 1 .051-.054c.139-.132.423-.327 1.03-.634.329-.165.774-.37 1.305-.615 1.144-.527 2.688-1.238 4.333-2.138l.006-.003L81.072 27.66l.014-.008.015-.008c2.818-1.618 4.958-2.846 7.83-4.47.445-.252.889-.505 1.33-.757.833-.477 1.659-.95 2.482-1.398a23.385 23.385 0 0 1-.908 1.927c-.667 1.273-1.388 2.446-2.128 3.65-.436.71-.879 1.43-1.32 2.187l-.013.021-.012.022-12.939 23.513c-.176.32-.391.706-.634 1.143a202.684 202.684 0 0 0-2.801 5.154 64.45 64.45 0 0 0-1.76 3.617c-.477 1.084-.905 2.196-1.068 3.093l-.339 1.861 1.847.41c1.384.306 2.738.746 4.19 1.233l.355.118c1.324.444 2.737.918 4.211 1.292l5.59 2.397Zm0 0 1.205-.042m-1.205.042 1.205-.042m0 0c.107-.134.172-.267.223-.41l.034-.102c-1.636-.493-3.237-.89-5.045-1.34a392.14 392.14 0 0 1-2.007-.503l6.795 2.355Zm-44.703 41.933.008-.006c-.007.005-.01.006-.008.006Z"></path><path stroke="#000" strokeWidth="3.931" d="m85.014 72.657.003 1.902c0 .237-.131.898-.52 2.035-.362 1.054-.867 2.303-1.426 3.599a180.677 180.677 0 0 1-2.23 4.91c-.32.687-.604 1.295-.826 1.787l-.006.012-11.353 25.575a37.463 37.463 0 0 0-.621 1.429c-.456 1.095-.752 1.805-1.544 2.548-1.016.953-3.052 2.012-7.932 2.666l-.17.023-.164.052-10.553 3.351c-1.658.354-3.247.861-4.728 1.334-.37.118-.733.234-1.089.344-1.097.342-2.162.649-3.246.878.307-2.708.987-5.148 1.666-7.056a33.7 33.7 0 0 1 1.179-2.892 30.289 30.289 0 0 1 .436-.899l.565-.485.018-.879c.01-.469.195-1.372.598-2.684.386-1.254.914-2.709 1.49-4.199a210.333 210.333 0 0 1 1.965-4.856c.453-1.096.857-2.073 1.13-2.78l.097-.252c.83-2.158 1.446-3.755 1.82-5.003.4-1.33.593-2.466.43-3.668-.154-1.14-.613-2.179-1.122-3.278l-.277-.595a75.948 75.948 0 0 1-1.783-4.058c-2.005-4.969-4.163-10.217-6.432-15.08a698.471 698.471 0 0 0-2.402-5.08c-.942-1.975-1.687-3.539-2.254-4.825-.486-1.105-.798-1.91-.973-2.52-.18-.622-.169-.886-.157-.961v-.005a.531.531 0 0 1 .051-.054c.139-.132.423-.327 1.03-.634.329-.165.774-.37 1.305-.615 1.144-.527 2.688-1.238 4.333-2.138l.006-.003L81.072 27.66l.014-.008.015-.008c2.818-1.618 4.958-2.846 7.83-4.47.445-.252.889-.505 1.33-.757.833-.477 1.659-.95 2.482-1.398a23.385 23.385 0 0 1-.908 1.927c-.667 1.273-1.388 2.446-2.128 3.65-.436.71-.879 1.43-1.32 2.187l-.013.021-.012.022-12.939 23.513c-.176.32-.391.706-.634 1.143a202.684 202.684 0 0 0-2.801 5.154 64.45 64.45 0 0 0-1.76 3.617c-.477 1.084-.905 2.196-1.068 3.093l-.339 1.861 1.847.41c1.384.306 2.738.746 4.19 1.233l.355.118c1.324.444 2.737.918 4.211 1.292l5.59 2.397Zm0 0 1.205-.042m-1.205.042 1.205-.042m0 0c.107-.134.172-.267.223-.41l.034-.102c-1.636-.493-3.237-.89-5.045-1.34a392.14 392.14 0 0 1-2.007-.503l6.795 2.355Zm-44.703 41.933.008-.006c-.007.005-.01.006-.008.006Z"></path></svg>
                                <span>{ ele.cashback_percentage }%</span>
                            </span>
                            <span>cashback</span>
                        </div>
                    </div>
                ))}
            </div>
        </div>
    )
}

export default Stories;
